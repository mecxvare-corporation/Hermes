# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Restore dependencies
      run: dotnet restore Hermes/Hermes.sln
    - name: Build
      run: dotnet build Hermes/Services/UserService/UserService.Api/UserService.Api.csproj --no-restore
    - name: Test
      run: dotnet test Hermes/Services/UserService/UserService.Tests.Unit/UserService.Tests.Unit.csproj --no-restore
    - name: Scan
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:${{ secrets.PROJECT_KEY }} /o:${{ secrets.ORGANIZATION_KEY }} /d:sonar.token=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        dotnet build Hermes/Hermes.sln --no-incremental
        dotnet-coverage collect "dotnet test Hermes/Services/UserService/UserService.Tests.Unit/UserService.Tests.Unit.csproj" -f xml -o "coverage.xml" --exclude "*/Migrations/*"
        dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
